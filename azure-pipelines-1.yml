trigger:
  branches:
    include:
      - master  # El pipeline se ejecuta solo en 'master'

pool:
  vmImage: 'ubuntu-latest'

variables:
  PROJECT_NAME: 'uptimestars'

steps:

- script: |
    echo "✅ Rama activa: $(Build.SourceBranch)"
  displayName: 'Mostrar rama activa'

- script: |
    echo "🔍 Diagnóstico inicial"
    docker --version
    find . -name "docker-compose.yml"
  displayName: 'Verificar entorno y archivos'

- task: DockerCompose@1
  displayName: '🚀 Build & Run Docker Compose'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerComposeFile: 'Uptime.Stars.Backend/docker-compose.yml'
    action: 'Run services'
    projectName: '$(PROJECT_NAME)'
    buildImages: true

- script: |
    echo "⏳ Esperando que la API se inicie con reintentos..."
    for i in {1..10}; do
      curl -sf http://localhost:8080 && echo "✅ API disponible" && exit 0
      echo "Intento $i: API no responde aún. Esperando 5 segundos..."
      sleep 5
    done
    echo "❌ API no disponible después de varios intentos."
    exit 1
  displayName: 'Verificar API levantada con reintentos'

- script: |
    echo "📦 Contenedores activos:"
    docker ps -a
    echo "📄 Logs del contenedor uptime.stars.api:"
    docker logs $(docker ps -aqf "name=uptime.stars.api" || true)
  displayName: 'Mostrar logs de contenedor API'
  condition: always()  # ✅ Ejecutar sin importar errores anteriores

